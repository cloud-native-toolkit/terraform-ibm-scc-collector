id: github.com/cloud-native-toolkit/terraform-ibm-scc-collector
name: scc-collector
alias: scc
type: terraform
description: Module that installs an scc collector into a VPC VSI instance
tags:
  - security
versions:
  - platforms:
      - vpc
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 2.1.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: 'Name of Resource Group in which to provision the VSI. '
      - name: region
        scope: global
        type: string
        description: Region.  Must be same Region as the VPC
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api key used to provision the IBM Cloud resources
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: Name of VPC into which to provision the VSI
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
      - name: ssh_private_key
        moduleRef:
          id: vpcssh
          output: private_key
        type: string
        description: The value of the private key that matches the ssh_key_id.
      - name: scc_registration_key
        scope: global
        type: string
        description: The registration key generated for the SCC collector. The collector must be set up with a *private* endpoint. The value can be created/retrieved here - https://cloud.ibm.com/security-compliance/settings?tab=collectors
    version: v1.1.0
    outputs:
      - name: vsi_private_ips
        description: output "vsi_private_ips" {   value = ibm_is_instance.vsi[*].primary_network_interface[0].primary_ipv4_address }
      - name: vsi_floating_ips
        description: output "vsi_floating_ips" {   value = ibm_is_floating_ip.vsi_floatingip[*].address }
      - name: vsi_security_group_id
        description: output "vsi_security_group_id" {   value = ibm_is_security_group.vsi_sg.id }
      - name: vsi_ssh_inboud_rule_id
        description: output "vsi_ssh_inboud_rule_id" {   value = split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1] }
      - name: DISABLE_SSH
        description: output "DISABLE_SSH" {   value = "nCommand to remove rule that allows inbound ssh:n ibmcloud is security-group-rule-delete ${ibm_is_security_group.vsi_sg.id} ${split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1]}n" }
  - platforms:
      - vpc
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: ">= 2.1.0"
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: ">= 1.0.0"
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: ">= 1.0.0"
    variables:
      - name: resource_group_name
        moduleRef:
          id: resource_group
          output: name
        type: string
        description: 'Name of Resource Group in which to provision the VSI. '
      - name: vpc_id
        moduleRef:
          id: vpc
          output: id
        type: string
        description: ID of VPC into which to provision the VSI.  A subnet will also be created.
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
      - name: ssh_private_key
        moduleRef:
          id: vpcssh
          output: private_key
        type: string
        description: The value of the private key that matches the ssh_key_id.
      - name: region
        scope: global
        type: string
        description: Region.  Must be same Region as the VPC
      - name: zone
        scope: ignore
        type: string
        description: Zone in which to provision the VSI.  Must be in the same Region as the VPC.
        default: description = Zone in which to provision the VSI.  Must be in the same Region as the VPC.
        optional: true
      - name: name_prefix
        scope: global
        type: string
        description: Prefix used to name all resources.
        default: description = Prefix used to name all resources.
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api key used to provision the IBM Cloud resources
      - name: scc_registration_key
        scope: global
        type: string
        description: The registration key generated for the SCC collector. The value can be created/retrieved here - https://cloud.ibm.com/security-compliance/settings?tab=collectors
    version: v1.0.1
    outputs:
      - name: vsi_private_ip
        description: output "vsi_private_ip" {   value = ibm_is_instance.vsi.primary_network_interface.0.primary_ipv4_address }
      - name: vsi_floating_ip
        description: output "vsi_floating_ip" {   value = ibm_is_floating_ip.vsi_floatingip.address }
      - name: vsi_subnet
        description: output "vsi_subnet" {   value = ibm_is_subnet.subnet_vsi.ipv4_cidr_block }
      - name: vsi_security_group_id
        description: output "vsi_security_group_id" {   value = ibm_is_security_group.vsi_sg.id }
      - name: vsi_ssh_inboud_rule_id
        description: output "vsi_ssh_inboud_rule_id" {   value = split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1] }
      - name: DISABLE_SSH
        description: output "DISABLE_SSH" {   value = "nCommand to remove rule that allows inbound ssh:n ibmcloud is security-group-rule-delete ${ibm_is_security_group.vsi_sg.id} ${split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1]}n" }
  - platforms:
      - vpc
    dependencies: []
    #    - id: cluster
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-ibm-container-platform
    #          version: ">= 1.7.0"
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-ocp-cluster
    #          version: ">= 2.0.0"
    #    - id: namespace
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-namespace
    #          version: ">= 2.1.0"
    #    - id: dashboard
    #      refs:
    #        - source: github.com/ibm-garage-cloud/terraform-k8s-dashboard
    #          version: ">= 1.6.0"
    variables: [{name: resource_group_name, type: string, description: 'Name of Resource Group in which to provision the VSI. '}, {name: region, type: string, description: Region.  Must be same Region as the VPC}, {name: zone, type: string, description: Zone in which to provision the VSI.  Must be in the same Region as the VPC., default: description = Zone in which to provision the VSI.  Must be in the same Region as the VPC., optional: true}, {name: ibmcloud_api_key, type: string, description: The IBM Cloud api key used to provision the IBM Cloud resources}, {name: vpc_id, type: string, description: ID of VPC into which to provision the VSI.  A subnet will also be created.}, {name: name_prefix, type: string, description: Prefix used to name all resources., default: description = Prefix used to name all resources., optional: true}, {name: ssh_key_id, type: string, description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.}, {name: ssh_private_key, type: string, description: The value of the private key that matches the ssh_key_id.}, {name: scc_registration_key, type: string, description: 'The registration key generated for the SCC collector. The value can be created/retrieved here - https://cloud.ibm.com/security-compliance/settings?tab=collectors'}]
    version: v1.0.0
    outputs:
      - name: vsi_private_ip
        description: output "vsi_private_ip" {   value = ibm_is_instance.vsi.primary_network_interface.0.primary_ipv4_address }
      - name: vsi_floating_ip
        description: output "vsi_floating_ip" {   value = ibm_is_floating_ip.vsi_floatingip.address }
      - name: vsi_subnet
        description: output "vsi_subnet" {   value = ibm_is_subnet.subnet_vsi.ipv4_cidr_block }
      - name: vsi_security_group_id
        description: output "vsi_security_group_id" {   value = ibm_is_security_group.vsi_sg.id }
      - name: vsi_ssh_inboud_rule_id
        description: output "vsi_ssh_inboud_rule_id" {   value = split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1] }
      - name: DISABLE_SSH
        description: output "DISABLE_SSH" {   value = "nCommand to remove rule that allows inbound ssh:n ibmcloud is security-group-rule-delete ${ibm_is_security_group.vsi_sg.id} ${split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1]}n" }
